// <auto-generated />
using System;
using CompanyHome.Core_Captcha;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompanyHome.Migrations
{
    [DbContext(typeof(MyDBContent))]
    [Migration("20180830065230_Migrations")]
    partial class Migrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CompanyHome.Areas.Manage.Models.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<DateTime>("LastLoginTime");

                    b.Property<string>("Name")
                        .HasMaxLength(15);

                    b.Property<string>("PassWord");

                    b.HasKey("ID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("CompanyHome.Areas.Manage.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<string>("Name")
                        .HasMaxLength(15);

                    b.Property<int>("Order");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CompanyHome.Areas.Manage.Models.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<string>("Content")
                        .HasMaxLength(400);

                    b.Property<string>("Ip");

                    b.Property<int>("Level");

                    b.Property<int>("NewsID");

                    b.Property<string>("Title")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("NewsID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CompanyHome.Areas.Manage.Models.News", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<string>("Author");

                    b.Property<int>("CID");

                    b.Property<string>("Content");

                    b.Property<int?>("GetCategoryID");

                    b.Property<int>("Maxlevel");

                    b.Property<string>("Title")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("GetCategoryID");

                    b.ToTable("News");
                });

            modelBuilder.Entity("CompanyHome.Areas.Manage.Models.Comment", b =>
                {
                    b.HasOne("CompanyHome.Areas.Manage.Models.News", "GetNews")
                        .WithMany()
                        .HasForeignKey("NewsID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CompanyHome.Areas.Manage.Models.News", b =>
                {
                    b.HasOne("CompanyHome.Areas.Manage.Models.Category", "GetCategory")
                        .WithMany("GetNews")
                        .HasForeignKey("GetCategoryID");
                });
#pragma warning restore 612, 618
        }
    }
}
